!function(){angular.module("ng-pros.directive.autocomplete",["templates-npAutocomplete"]).directive("npAutocomplete",["$timeout","$http","$compile","$templateCache","$sce",function($timeout,$http,$compile,$templateCache,$sce){return{require:"?ngModel",restrict:"A",transclude:!0,scope:{npAuto:"=",ngModel:"=",npInputModel:"=",npSelectedItem:"=",npAutocomplete:"="},link:function(scope,element,attrs,ngModelCtrl,transclude){var id=attrs.id,input=null,lastVal="",template=null,timeoutId=null,skipWatch=!1,closeOnBlur=!0,listElement=null,itemTemplate=null,hasSelection=!1,isListChange=!1,internalModelChange=!1,internalInputChange=!1,options={limit:5,delay:500,params:{},nameAttr:"name",minlength:1,valueAttr:"id",listClass:"list-group",itemClass:"list-group-item",limitParam:"limit",templateUrl:"np-autocomplete-template.tpl.html",searchParam:"search",loadStateMessage:"Loading...",messageClass:"list-group-item",errorStateMessage:"Something went wrong.",itemFocusClass:"active",highlightClass:"bg-info text-info",openStateClass:"np-autocomplete-open",loadStateClass:"np-autocomplete-load",errorStateClass:"has-error",closeStateClass:"np-autocomplete-close",itemTemplateUrl:"np-autocomplete-item-template.tpl.html",noResultsMessage:"No results found.",hasSelectionClass:"has-success",highlightExactSearch:!0},open=function(){resize(),listElement.css("display",""),element.removeClass(scope.options.closeStateClass),element.addClass(scope.options.openStateClass)},close=function(){listElement.css("display","none"),element.removeClass(scope.options.openStateClass),element.addClass(scope.options.closeStateClass)},updateSelectionMode=function(a){element.removeClass(scope.options.errorStateClass),scope.hasError=!1,a?(element.addClass(scope.options.hasSelectionClass),!hasSelection&&scope.options.onSelect&&scope.options.onSelect(item)):(element.removeClass(scope.options.hasSelectionClass),hasSelection&&scope.options.onDeselect&&scope.options.onDeselect()),hasSelection=a},flush=function(){$timeout.cancel(timeoutId),scope.focusedItemIndex=-1,attrs.npSelectedItem&&(scope.npSelectedItem=null),attrs.ngModel?(internalModelChange=!0,ngModelCtrl.$setViewValue()):updateSelectionMode(!1)},updateInputModel=function(){var a=input.val();return $timeout(function(){attrs.npInputModel&&(internalInputChange=!0,scope.npInputModel=a)}),a},changeHandler=function(evt){flush();var val=updateInputModel();timeoutId=$timeout(function(){val&&val.length>=scope.options.minlength?(val!==lastVal&&(scope.loading=!0,scope.searchResults=[],element.addClass(scope.options.loadStateClass),scope.options.params[scope.options.searchParam]=val,$http.get(scope.options.url,{params:scope.options.params})["finally"](function(){scope.loading=!1,element.removeClass(scope.options.loadStateClass)}).then(function(response){var data=response.data;scope.options.dataHolder&&(data=eval("data."+scope.options.dataHolder)),scope.options.each&&scope.options.each(data),scope.searchResults=data,scope.focusedItemIndex=0})["catch"](function(a){scope.hasError=!0,element.addClass(scope.options.errorStateClass),scope.options.onError&&scope.options.onError(a)})),open()):(close(),scope.searchResults=[]),lastVal=val},evt?scope.options.delay:0)},blurHandler=function(a){angular.element.contains(listElement[0],a.target)||isListChange||input[0]===a.target?input.focus():(closeOnBlur&&close(),scope.options.onBlur&&scope.options.onBlur()),isListChange=!1,closeOnBlur=!0},focusHandler=function(){lastVal&&lastVal.length>=scope.options.minlength&&!hasSelection&&open()},resize=function(){$timeout(function(){var a=input.offset();listElement.css({top:a.top+input.outerHeight()-angular.element(document).scrollTop(),left:a.left,width:input.outerWidth()})})},focusNextListItem=function(){scope.focusedItemIndex=scope.focusedItemIndex<0?0:++scope.focusedItemIndex%scope.searchResults.length};scope.options=angular.extend({},options,scope.npAutocomplete),scope.searchResults=[],scope.focusedItemIndex=-1,scope.options.delay=scope.options.delay>100?scope.options.delay:100,scope.options.params[scope.options.limitParam]=scope.options.limit,id||(id="np-autocomplete-"+Date.now(),element.attr("id",id)),template=angular.element(scope.options.template||$templateCache.get(scope.options.templateUrl)),itemTemplate=scope.options.itemTemplate||$templateCache.get(scope.options.itemTemplateUrl),listElement=template.closest("#np-do-not-touch"),listElement.removeAttr("id"),listElement.addClass(scope.options.listClass),listElement.append(itemTemplate),element.html($compile(template)(scope)),element.find("#np-autocomplete-transclude").replaceWith(transclude()),element.addClass("np-autocomplete-wrapper"),element.addClass(scope.options.closeStateClass),input=element.find("input"),resize(),input.on("input",null,null,changeHandler),input.keydown(function(a){var b=!1;if(!scope.loading&&scope.searchResults.length)switch(b=!0,a.keyCode){case 38:scope.focusedItemIndex=scope.focusedItemIndex<1?scope.searchResults.length-1:scope.focusedItemIndex-1;break;case 40:focusNextListItem();break;case 13:scope.select(scope.searchResults[scope.focusedItemIndex]);break;case 9:focusNextListItem();break;default:b=!1}scope.$$phase||scope.$apply(),b&&a.preventDefault()}),input.focus(focusHandler),angular.element(window).on("resize scroll",resize),angular.element(document).on("click keyup",blurHandler),scope.select=function(item){$timeout.cancel(timeoutId),isListChange=!0,close(),attrs.ngModel?ngModelCtrl.$setViewValue(eval("item."+scope.options.valueAttr)):updateSelectionMode(!0);var val=scope.options.clearOnSelect?"":eval("item."+scope.options.nameAttr);attrs.npInputModel?scope.npInputModel=lastVal=val:input.val(lastVal=val),attrs.npSelectedItem&&(scope.npSelectedItem=item);for(var searchResultsLength=scope.searchResults.length,i=searchResultsLength-1;i>=0;i--)angular.equals(item,scope.searchResults[i])&&(scope.searchResults=scope.searchResults.splice(i,1))},scope.clear=function(){isListChange=!0,close(),flush(),attrs.npInputModel?scope.npInputModel=lastVal="":input.val(lastVal=""),scope.searchResults=[]},scope.highlight=function(a){var b=input.val().trim().replace(/([{}()[\]\\.?*+^$|=!:~-])/g,"\\$1"),c=new RegExp(scope.options.highlightExactSearch?b:b.replace(/\s+/,"|"),"ig"),d=a?a:"";return $sce.trustAsHtml(d.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(c,'<mark class="'+scope.options.highlightClass+'">$&</mark>'))},scope.onItemMouseenter=function(a){scope.focusedItemIndex=a},scope.getItemClasses=function(a){var b={};return b[scope.options.itemClass]=scope.options.itemClass,b[scope.options.itemFocusClass]=scope.options.itemFocusClass&&a===scope.focusedItemIndex,b},attrs.ngModel&&scope.$watch("ngModel",function(a){internalModelChange||($timeout.cancel(timeoutId),close()),internalModelChange=!1,updateSelectionMode(!!a)}),attrs.npInputModel&&scope.$watch("npInputModel",function(a){internalInputChange||input.val(lastVal=a),internalInputChange=!1}),attrs.npAuto&&scope.$watch("npAuto",function(a){skipWatch?skipWatch=!1:(skipWatch=!0,scope.npAuto=null,a!==input.val()?(input.val(a),changeHandler()):(closeOnBlur=!1,focusHandler()))}),scope.$on("$destroy",function(){angular.element(window).off("resize scroll",resize),angular.element(document).off("click keyup",blurHandler)})}}}]),angular.module("templates-npAutocomplete",["np-autocomplete-item-template.tpl.html","np-autocomplete-template.tpl.html"]),angular.module("np-autocomplete-item-template.tpl.html",[]).run(["$templateCache",function(a){a.put("np-autocomplete-item-template.tpl.html",'<button type="button"\n		ng-click="select(item)"\n		ng-class="getItemClasses($index)"\n		ng-repeat="item in searchResults"\n		ng-bind-html="highlight($eval(\'item.\' + options.nameAttr))"\n		ng-mouseenter="onItemMouseenter($index)">\n</button>')}]),angular.module("np-autocomplete-template.tpl.html",[]).run(["$templateCache",function(a){a.put("np-autocomplete-template.tpl.html",'<div id="np-autocomplete-transclude"></div>\n<div id="np-do-not-touch" style="display: none;">\n	<button\n		type="button"\n		ng-click="clear()"\n		ng-class="options.messageClass"\n		ng-bind="options.noResultsMessage"\n		ng-if="!searchResults.length && !loading && !hasError">\n	</button>\n	<button\n		type="button"\n		ng-if="hasError && !loading"\n		ng-click="clear()"\n		ng-class="options.messageClass"\n		ng-bind="options.errorStateMessage">\n	</button>\n	<a\n		ng-if="loading"\n		ng-class="options.messageClass"\n		ng-bind="options.loadStateMessage">\n	</a>\n</div>')}])}();