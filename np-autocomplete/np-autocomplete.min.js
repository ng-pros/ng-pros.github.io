!function(){angular.module("ng-pros.directive.autocomplete",["templates-npAutocomplete"]).directive("npAutocomplete",["$timeout","$http","$compile","$templateCache","$sce",function($timeout,$http,$compile,$templateCache,$sce){return{require:"?ngModel",restrict:"A",transclude:!0,scope:{npInputModel:"=",npSelectedItem:"=",npAutocomplete:"="},link:function(scope,element,attrs,ngModelCtrl,transclude){var id=attrs.id,input=null,lastVal="",template=null,timeoutId=null,listElement=null,hasSelected=!1,isKeyPressed=!1,itemTemplate=null,isPasteChange=!1,pasteTimeoutId=null,options={limit:5,delay:500,params:{},nameAttr:"name",minlength:2,valueAttr:"id",limitParam:"limit",templateUrl:"np-autocomplete-template.tpl.html",searchParam:"search",closedClass:"np-autocomplete-closed",openedClass:"np-autocomplete-opened",loadingClass:"np-autocomplete-loading",loadingMessage:"Loading...",itemTemplateUrl:"np-autocomplete-item-template.tpl.html",noResultsMessage:"No results found."},open=function(){$timeout(function(){scope.isOpened=!0,element.removeClass(options.closedClass),element.addClass(options.openedClass)},100)},close=function(){$timeout(function(){scope.isOpened=!1,element.removeClass(options.openedClass),element.addClass(options.closedClass)})},deselect=function(){hasSelected=!1,attrs.npSelectedItem&&(scope.npSelectedItem=null),attrs.ngModel&&ngModelCtrl.$setViewValue(),options.onDeselect&&options.onDeselect()},changeHandler=function(){deselect(),$timeout.cancel(timeoutId),timeoutId=$timeout(function(){var val=input.val();attrs.npInputModel&&(scope.npInputModel=val),val&&val.length>=options.minlength?(open(),val!==lastVal&&(scope.searchResults=[],scope.isLoading=!0,element.addClass(options.loadingClass),options.params[options.searchParam]=val,$http.get(options.url,{params:options.params})["finally"](function(){scope.isLoading=!1,element.removeClass(options.loadingClass)}).then(function(response){var data=response.data;options.dataHolder&&(data=eval("data."+options.dataHolder)),options.each&&options.each(data),scope.searchResults=data})["catch"](function(a){options.onError&&options.onError(a)}))):(close(),scope.searchResults=[]),lastVal=val},options.delay)},blurHandler=function(a){angular.element(a.target).parents("#"+id).length||close()},resize=function(){$timeout(function(){scope.inputBounds={top:input.position().top+input.outerHeight(),width:input.outerWidth()}})};scope.npAutocomplete=options=angular.extend(options,scope.npAutocomplete),id||(id="np-autocomplete-"+Date.now(),element.attr("id",id)),element.addClass("np-autocomplete-wrapper"),element.addClass(options.closedClass),template=angular.element(options.template||$templateCache.get(options.templateUrl)),itemTemplate=options.itemTemplate||$templateCache.get(options.itemTemplateUrl),listElement=template.closest(".np-autocomplete-list"),listElement.append(itemTemplate),element.html($compile(template)(scope)),element.find("#np-autocomplete-input").replaceWith(transclude()),resize(),input=element.find("input"),options.delay=options.delay>100?options.delay:100,options.limit&&(options.params[options.limitParam]=options.limit),input.keydown(function(){isKeyPressed=!0}),input.keyup(function(){isPasteChange||changeHandler(),isKeyPressed=isPasteChange=!1}),input.on("paste",function(a){isPasteChange=isKeyPressed,$timeout.cancel(pasteTimeoutId),pasteTimeoutId=$timeout(changeHandler,100)}),input.focus(function(){lastVal&&lastVal.length>=options.minlength&&!hasSelected&&open()}),angular.element(window).on("resize",resize),angular.element(document).on("click keyup",blurHandler),scope.select=function(item){close(),hasSelected=!0;var val=options.clearOnSelect?"":eval("item."+options.nameAttr);input.val(lastVal=val),attrs.ngModel&&ngModelCtrl.$setViewValue(eval("item."+options.valueAttr)),attrs.npInputModel&&(scope.npInputModel=val),attrs.npSelectedItem&&(scope.npSelectedItem=item),options.onSelect&&options.onSelect(item)},scope.clear=function(){close(),attrs.npInputModel&&(scope.npInputModel=null),lastVal="",input.val(""),input.focus()},scope.match=function(a){var b=new RegExp(lastVal.trim().replace(/([{}()[\]\\.?*+^$|=!:~-])/g,"\\$1"),"ig"),c=a?a:"";return $sce.trustAsHtml(c.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(b,'<span class="np-autocomplete-match">$&</span>'))},scope.$on("$destroy",function(){angular.element(window).off("resize",resize),angular.element(document).off("click keyup",blurHandler)})}}}]),angular.module("templates-npAutocomplete",["np-autocomplete-item-template.tpl.html","np-autocomplete-template.tpl.html"]),angular.module("np-autocomplete-item-template.tpl.html",[]).run(["$templateCache",function(a){a.put("np-autocomplete-item-template.tpl.html",'<button type="button" class="list-group-item" ng-repeat="item in searchResults" ng-click="select(item)" ng-bind-html="match($eval(\'item.\' + npAutocomplete.nameAttr))"></button>')}]),angular.module("np-autocomplete-template.tpl.html",[]).run(["$templateCache",function(a){a.put("np-autocomplete-template.tpl.html",'<div id="np-autocomplete-input"></div>\n<div class="list-group np-autocomplete-list" ng-style="inputBounds" ng-if="isOpened">\n	<button type="button" class="list-group-item" ng-if="!searchResults.length && !isLoading" ng-click="clear()">\n	{{npAutocomplete.noResultsMessage}}\n	</button>\n	<a class="list-group-item" ng-if="isLoading">{{npAutocomplete.loadingMessage}}</a>\n</div>')}])}();